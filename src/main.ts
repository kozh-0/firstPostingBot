import "dotenv/config";
import { Telegraf } from "telegraf";
import { message } from "telegraf/filters";
import { facts } from "./facts";
import axios from "axios";
import { generateDogPost } from "./getText";

const bot = new Telegraf(process.env.TG_KEY!, { handlerTimeout: 20000 });

// let count = 24;
const interval = setTimeout(async () => {
  // if (!facts[count]) {
  //   clearInterval(interval);
  //   return bot.telegram.sendMessage(
  //     process.env.CATS_CHANNEL_NAME!,
  //     "–ü–æ—Å—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å... \n\n –°–∫–æ—Ä–æ –±—É–¥—É—Ç –Ω–æ–≤—ã–µ —Ñ–∞–∫—Ç—ã!üê±"
  //   );
  // }

  // const catImg: [{ id: string; url: string; width: number; height: number }] = await axios(
  //   `https://api.thecatapi.com/v1/images/search`
  // ).then((res) => res.data);

  // bot.telegram.sendPhoto(process.env.CATS_CHANNEL_NAME!, catImg[0].url, {
  //   caption: `${count + 1}. ${facts[count].title}\n\n${facts[count].descr}`,
  // });

  // count += 1;
  // console.log(count);

  const dogImg: { message: string; status: string } = await axios(
    `https://dog.ceo/api/breeds/image/random`
  ).then((res) => res.data);

  console.log("–í —Ä–∞–±–æ—Ç–µ");
  const post = await generateDogPost();
  console.log("–ü–æ–ª—É—á–∏–ª, –æ—Ç–ø—Ä–∞–≤–ª—è—é...", post);

  bot.telegram.sendPhoto(process.env.DOGS_CHANNEL_NAME!, dogImg.message, {
    caption: post,
  });
}, 1000);

bot.catch((err, ctx) => {
  console.error(err);
  ctx.reply("–£–ø—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
});

bot.launch();
console.log("–ó–∞–ø—É—Å—Ç–∏–ª—Å—è");
